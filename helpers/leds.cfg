[gcode_macro _led_helper_macros]
gcode:
  {%- macro idle(tool_num) -%}
    {%- set tn = tool_num | default(printer.toolchanger.tool_number) -%}
    SET_LED_EFFECT EFFECT={'idle_t' ~ tn} REPLACE=1
  {%- endmacro -%}
  
  {%- macro active(tool_num) -%}
    {%- set tn = tool_num | default(printer.toolchanger.tool_number) -%}
    SET_LED_EFFECT EFFECT={'active_t' ~ tn} REPLACE=1
  {%- endmacro -%}
  
  {%- macro inactive(tool_num) -%}
    {%- set tn = tool_num | default(printer.toolchanger.tool_number) -%}
    STOP_LED_EFFECTS LEDS="{'t' ~ tn}"
  {%- endmacro %}
  
  {%- macro heating(tool_num) -%}
    {%- set tn = tool_num | default(printer.toolchanger.tool_number) -%}
    SET_LED_EFFECT EFFECT={'heating_t' ~ tn} REPLACE=1
  {%- endmacro -%}
  
  {%- macro waiting(tool_num) -%}
    {%- set tn = tool_num | default(printer.toolchanger.tool_number) -%}
    SET_LED_EFFECT EFFECT={'waiting_t' ~ tn} REPLACE=1
  {%- endmacro %}
  
  {%- macro set_many(state, tool_nums) -%}
    {%- set tns = tool_nums | default(printer.toolchanger.tool_numbers) -%}
    {%- for tn in tns -%}
      {%- if state == 'idle' -%}
        {idle(tn)}
      {%- elif state == 'active' -%}
        {active(tn)}
      {%- elif state == 'inactive' -%}
        {inactive(tn)}
      {%- elif state == 'heating' -%}
        {heating(tn)}
      {%- elif state == 'waiting' -%}
        {waiting(tn)}
      {%- endif -%}
    {%- endfor -%}
  {%- endmacro -%}