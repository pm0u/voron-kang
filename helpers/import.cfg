[delayed_gcode _REGISTER_IMPORTS_AT_START]
initial_duration: 0.5
gcode:
    {% set prefix = "_"              %}
    {% set suffix = "_helper_macros" %}

    {% set registered = [] %}
    {% set env = printer.printer.lookup_object('gcode_macro').env %}
    #---< register every matching runtime macro >------------------------------
    {% for name, obj in printer.printer.lookup_objects() if 'template' in obj.__dir__() %}
        {% if name.startswith("gcode_macro " ~ prefix) and name.endswith(suffix) %}
            {% set start = ("gcode_macro " ~ prefix)|length %}
            {% set end   = name|length - suffix|length %}
            {% set core  = name[start:end] %}
            {% set _     = env.globals.update({core: obj.template.template}) %}
            {% set _     = registered.append(" â”€ '" ~ name ~ "' as '" ~ core ~ "'") %}
        {% endif %}
    {% endfor %}
    #---< summary block >---------------------------------------------------------
    {% if registered %}
        {% set html = "<details>" ~ "<summary>" ~ registered|length ~ " helper template(s) registered</summary>" ~ registered|map('e')|join("<br>") ~ "</details>" %}
        {action_respond_info(html)}
    {% else %}
        {action_respond_info("No templates found to load for import.")}
    {% endif %}
