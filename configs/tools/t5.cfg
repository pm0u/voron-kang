[tool T5]
tool_number: 5
extruder: extruder5
fan: t5_part_fan
gcode_x_offset: 0
gcode_y_offset: 0
gcode_z_offset: 0
# Position with the toolhead aligned with the dock
params_park_x: 337
params_park_y: 0.5
params_park_z: 335
# input shaping
params_input_shaper_type_x: 'ei'
params_input_shaper_freq_x: 63.4
params_damping_ratio_x: 0.047
params_input_shaper_type_y: 'mzv'
params_input_shaper_freq_y: 38.4
params_damping_ratio_y: 0.055

[mcu t5]
canbus_uuid: d45eb64a55d0


[multi_pin t5_part_fan_pins]
pins: t5:PB15,t5:PB13

[fan_generic t5_part_fan]
pin: multi_pin:t5_part_fan_pins

[heater_fan t5_hotend_fan]
pin: t5:PA9
tachometer_pin: t5:PC6
tachometer_poll_interval: 0.0009
kick_start_time: 0.5
heater: extruder5
heater_temp: 50.0

[extruder5]
step_pin: t5:PB9
dir_pin: t5:PB8
enable_pin: !t5:PB7
heater_pin: t5:PA7
nozzle_diameter: 0.4
filament_diameter: 1.75
sensor_type: Generic 3950
pullup_resistor: 2200
sensor_pin: t5:PA6
min_temp: -100
min_extrude_temp: 160
max_temp: 350
control: pid
pid_Kp: 16.006
pid_Ki: 0.702
pid_Kd: 91.234
smooth_time: 0.5
microsteps: 16
gear_ratio: 50:10
rotation_distance: 21.91
max_extrude_cross_section: 6
max_extrude_only_distance: 100
pressure_advance_smooth_time: 0.015

[tmc2209 extruder5]
uart_pin: t5:PC14
interpolate: True
run_current: 1
stealthchop_threshold: 0

[filament_switch_sensor t5_filament]
switch_pin: t5:PB1
pause_on_runout: True
runout_gcode:
  {%- import message as msg -%}
  {% if printer['gcode_macro PRINT_START'].variable_printing %}
    {msg.error("Filament runout detected. Pausing print.")}
    PAUSE
  {% endif %}

[tool_probe T5]
pin: t5:PA10
tool: 5
z_offset: -0.88
speed: 5.0
samples: 3
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.02
samples_tolerance_retries: 3
activate_gcode:
    _TAP_PROBE_ACTIVATE HEATER=extruder5

[adxl345 t5]
cs_pin: t5:PB12
spi_software_sclk_pin: t5:PB10
spi_software_mosi_pin: t5:PB11
spi_software_miso_pin: t5:PB2
axes_map: x,z,y

[gcode_macro T5]
variable_color: ""
variable_tool_number: 5
gcode:
  {% set svf = printer.save_variables.variables %}
  # Grab the current tool number so we can remove any z offset that is present
  {% set z_offset_val = svf[ 't' + printer.toolchanger.tool_number|string + '_offset_z'] %}
  # Subtract the tool z_offset from the homing_origin, the remainder is any tweaked z offset
  {% set modified_z = printer.gcode_move.homing_origin.z|float|round(3) - z_offset_val|float|round(3) %}
  # Clear the offsets set by macros
  SET_GCODE_OFFSET X=0 Y=0 Z=0 MOVE=0
  # Activate the selected tool
  SELECT_TOOL T={tool_number}
  # Apply the macro offsets, including modified z settings
  SET_GCODE_OFFSET X={svf[ 't' + tool_number|string + '_offset_x']|float|round(3)} Y={svf[ 't' + tool_number|string + '_offset_y']|float|round(3)} Z={svf[ 't' + tool_number|string + '_offset_z'] + modified_z} MOVE=1
  # Update the current tool variable in the save file
  SAVE_VARIABLE VARIABLE=current_tool VALUE={tool_number}

[neopixel t5]
pin: t5:PA8

# heating = yellow to red
[led_effect heating_t5]
leds:
  neopixel:t5
layers:
  heater 50 0 top (1.0,1.0,0.0),(1.0,0.0,0.0)
heater: extruder5

# Blue idle
[led_effect idle_t5]
leds:
  neopixel:t5
layers:
  breathing 3 0 top (0.0,0.0,1.0)
  
# Green active
[led_effect active_t5]
leds:
  neopixel:t5
layers:
  static 1 1 top (0.0,1.0,0.0)
  
# Purple waiting
[led_effect waiting_t5]
leds:
  neopixel:t5
layers:
  breathing 3 0 top (1.0,0.0,1.0)
