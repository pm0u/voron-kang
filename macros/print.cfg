[gcode_macro PRINT_START]
variable_printing: False
gcode:
  {%- import message as msg -%}
  {%- import homing as h with context -%}
  {%- import toolchanger as tc with context -%}
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=False
  {msg.echo("Starting print...")}

  {% set tools = '' %}
  {% for tool_nr in printer.toolchanger.tool_numbers %}
    {msg.echo("Checking tool " ~ tool_nr)}
    {% set tooltemp_param = 'T' ~ tool_nr ~ '_TEMP' %}
    {% if tooltemp_param in params %}
      {msg.echo("Tool " ~ tool_nr ~ " will be preheated to " ~ params[tooltemp_param])}
      {% if tools != '' %}
        {% set tools = tools + ',' %}
      {% endif %}
      {msg.echo("Adding tool " ~ tool_nr ~ " to preheat list")}
      {% set tools = tools ~ tool_nr %}
    {% endif %}
    {msg.echo("Tools to preheat so far: " ~ tools)}
  {% endfor %}
  
  {msg.echo("Tools to preheat: " ~ tools)}
  
  {% if tools|length > 1 %}
    {msg.echo('Calibrating toolhead offsets...')}
    TC_FIND_TOOL_OFFSETS TOOL={tools}
  {% endif %}
  
  DISABLE_ALL_FILAMENT_SENSORS
  {msg.echo("Enabling filament runout sensors for tools: " + tools)}
  ENABLE_FILAMENT_SENSORS TOOLS={tools}

  M140 S{ params.BED_TEMP }
  # @TODO: start chamber heating here as well...
  
  # preheat for leveling, go to purge to catch any dribble once we are homed
  M104 S150
  {h.home_unless_homed()}
  GO_TO_PURGE
  M109 S150
  CLEAN_NOZZLE
  # Force a rehome & QGL in case the nozzle was dirty
  {h.orient(force=1)}
  M104 S0 # Stop to heat, the actual printing may happen with a different hotend.
  
  BED_MESH_PROFILE LOAD=default 

  # preheat all used toolheads
  {% for tool_nr in tools %}
    {% set tooltemp_param = 'T' ~ tool_nr|string ~ '_TEMP' %}
    {% if tooltemp_param in params %}
      M104 T{tool_nr} S{params[tooltemp_param] - 50}
    {% endif %}
  {% endfor %}
  
  {% if params.TOOL is defined and params.TOOL != tc.get_mounted_tn() | string %}
    T{params.TOOL}
  {% endif %}
  
  {msg.echo('Waiting for build plate & preheating first extruder...')}
  M104 S{ params.TOOL_TEMP }
  GO_TO_PURGE
  
  # Wait for second BP sensor to get _close_ to temp
  TEMPERATURE_WAIT SENSOR="temperature_sensor buildplate" MINIMUM={ [ params.BED_TEMP|float * 0.94, params.BED_TEMP|float - 6.0 ] | min }
  # @TODO wait for chamber to get close to temp as well
  #TEMPERATURE_WAIT SENSOR="chamber" MINIMUM={ [ params.CHAMBER_TEMP|float * 0.94, params.CHAMBER_TEMP|float - 6.0 ] | min }

  # final heating...
  M109 S{ params.TOOL_TEMP }
  G92 E0 ; Zero extruder
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=True
  {msg.echo('Printing')}
  LINE_PURGE
  
[gcode_macro PRINT_END]
gcode:
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=False
    
    # Clear the buffer
    M400
    # zero extruder
    G92 E0
    
    # disable all filament sensors
    {% for t in printer.toolchanger.tool_numbers %}
      {% set tool_filament_runout_sensor = 't' ~ t|string ~ '_filament' %}
      SET_FILAMENT_SENSOR SENSOR={tool_filament_runout_sensor} ENABLE=0
    {% endfor %}
    

    # relative
    G91

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 20) %}
        {% set z_safe = 20.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    
    TURN_OFF_HEATERS
    # turn off fan
    M107
    # turn off bed
    M140

    # absolute
    G90
    {% set tool = printer[printer.toolchanger.tool] %}
    # park nozzle up top (near dock)
    G0 X{tool.params_park_x} Y{tool.params_safe_y} Z300 F3600
    M18
    M117 Print done

[gcode_macro APPLY_FILAMENT_OFFSET]
description: Apply a Z offset adjustment for a specific filament
gcode:
    RESPOND MSG="Current layer: {printer.print_stats.info.current_layer}"
    {% if printer.print_stats.info.current_layer == 1 %}
      {% set filament_z = params.Z|default(0)|float %}
      { action_respond_info("Setting Filament Offset to %.3fmm" % (filament_z)) }
      SET_GCODE_OFFSET Z_ADJUST={filament_z}
    {% endif %}