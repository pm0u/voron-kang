[gcode_macro PRINT_START]
variable_printing: False
variable_used_tools: ''
gcode:
  {%- import message as msg -%}
  {%- import homing as h with context -%}
  {%- import led as led with context -%}
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=False
  {msg.echo("Starting print...")}

  {% set tools = namespace(value='') %}
  {% for tool_nr in printer.toolchanger.tool_numbers %}
    {% set tooltemp_param = 'T' ~ tool_nr ~ '_TEMP' %}
    {% if tooltemp_param in params %}
      {% if tools.value != '' %}
        {% set tools.value = tools.value + ',' %}
      {% endif %}
      {% set tools.value = tools.value ~ tool_nr %}
    {% endif %}
  {% endfor %}
  
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=used_tools VALUE="{tools.value}"
  {msg.info("Tools used in this print: " + tools.value)}

  M140 S{ params.BED_TEMP }

  {% set initial_chamber_temp = printer['heater_generic chamber'].temperature %}
  {% if params.CHAMBER_TEMP is defined and params.CHAMBER_TEMP|int != 0 %}
    SET_HEATER_TEMPERATURE heater=chamber TARGET={params.CHAMBER_TEMP}
  {% endif %}
  
  DISABLE_ALL_FILAMENT_SENSORS
  {msg.echo("Enabling filament runout sensors for tools: " + tools.value)}
  ENABLE_FILAMENT_SENSORS TOOLS={tools.value}
  {led.set_many('idle', tools.value.split(','))}

  # preheat for leveling, go to purge to catch any dribble once we are homed
  {h.orient()}
  T0
  GO_TO_PURGE
  M109 S150
  CLEAN_NOZZLE
  # Force a rehome & QGL in case the nozzle was dirty
  {h.orient(force=1)}
  M104 S0 # Stop heat, the actual printing may happen with a different hotend.

  {% set tools_needing_calibration = tools.value | replace('0,', '') | replace('0','')%}
  {% if tools_needing_calibration | length  %}
    {msg.echo('Calibrating toolhead offsets...')}
    TC_FIND_TOOL_OFFSETS TOOL={tools_needing_calibration} SWITCH=0
  {% endif %}
  
  BED_MESH_PROFILE LOAD=default 
  
  # preheat all used toolheads
  {% for tool_nr in tools.value %}
    {% set tooltemp_param = 'T' ~ tool_nr ~ '_TEMP' %}
    {% if tooltemp_param in params %}
      M104 T{tool_nr} S{params[tooltemp_param]|int - 60}
    {% endif %}
  {% endfor %}
  
  T{params.TOOL}
  {msg.echo('Waiting for build plate & preheating first extruder...')}
  GO_TO_PURGE
  
  # Wait for second BP sensor to get _close_ to temp
  {% if params.BED_TEMP is defined and params.BED_TEMP != 0 %}
    TEMPERATURE_WAIT SENSOR="temperature_sensor buildplate" MINIMUM={ [ params.BED_TEMP|float * 0.90, params.BED_TEMP|float - 6.0 ] | min }
  {% endif %}
  {% if params.CHAMBER_TEMP is defined and params.CHAMBER_TEMP|int != 0 %}
    TEMPERATURE_WAIT SENSOR="heater_generic chamber" MINIMUM={ [ params.CHAMBER_TEMP|float * 0.98, params.CHAMBER_TEMP|float - 2.0 ] | min }
  {% endif %}

  {% if params.CHAMBER_TEMP is defined and params.CHAMBER_TEMP|int > 0 and initial_chamber_temp < 0.7 * params.CHAMBER_TEMP|float %}
    {msg.echo('Chamber started cold, waiting 10 minutes for heat soak...')}
    G4 P600000
  {% endif %}

  # final heating...
  M109 S{ params.TOOL_TEMP }
  CLEAN_NOZZLE
  
  G92 E0 ; Zero extruder
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=True
  {msg.echo('Printing')}
  SKEW_PROFILE LOAD=calilantern_skew_profile
  LINE_PURGE

[gcode_macro PRINT_END]
gcode:
  {%- import message as msg -%}
  {%- import led as led with context -%}
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=False
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=used_tools VALUE="''"
  
  # Clear the buffer
  M400
  # zero extruder
  G92 E0
  # Retract a little filament
  G1 E-4.0 F3600
  
  DISABLE_ALL_FILAMENT_SENSORS
  
  SET_SKEW CLEAR=1

  # relative
  G91

  #   Get Boundaries
  {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
  {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
  {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

  #   Check end position to determine safe direction to move
  {% if printer.toolhead.position.x < (max_x - 20) %}
      {% set x_safe = 20.0 %}
  {% else %}
      {% set x_safe = -20.0 %}
  {% endif %}

  {% if printer.toolhead.position.y < (max_y - 20) %}
      {% set y_safe = 20.0 %}
  {% else %}
      {% set y_safe = -20.0 %}
  {% endif %}

  {% if printer.toolhead.position.z < (max_z - 20) %}
      {% set z_safe = 20.0 %}
  {% else %}
      {% set z_safe = max_z - printer.toolhead.position.z %}
  {% endif %}

  G0 Z{z_safe} F3600             ; move nozzle up
  G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
  
  TURN_OFF_HEATERS
  END_PRINT_PARK

  # turn off fan
  M107
  M18
  {led.set_many('inactive')}
  {msg.success('Print done!')}

[gcode_macro APPLY_FILAMENT_OFFSET]
description: Apply a Z offset adjustment for a specific filament
gcode:
  {%- import message as msg -%}
  {% if printer.print_stats.info.current_layer == 1 %}
    {% set filament_z = params.Z|default(0)|float %}
    {msg.info("Setting Filament Offset to %.3fmm" % (filament_z))}
    SET_GCODE_OFFSET Z_ADJUST={filament_z}
  {% endif %}

[gcode_macro END_PRINT_PARK]
description: Park the current tool, cool down T0, then pick it up.
gcode:
    M104 S0 T0
    UNSELECT_TOOL RESTORE_AXIS=
    TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=150
    T0